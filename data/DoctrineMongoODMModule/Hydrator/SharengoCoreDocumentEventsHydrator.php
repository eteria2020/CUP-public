<?php

namespace DoctrineMongoODMModule\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class SharengoCoreDocumentEventsHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $return = $value instanceof \MongoId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['event_time'])) {
            $value = $data['event_time'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['eventTime']->setValue($document, clone $return);
            $hydratedData['eventTime'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['event_id']) || (! empty($this->class->fieldMappings['eventId']['nullable']) && array_key_exists('event_id', $data))) {
            $value = $data['event_id'];
            if ($value !== null) {
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['eventId']->setValue($document, $return);
            $hydratedData['eventId'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['server_time'])) {
            $value = $data['server_time'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['serverTime']->setValue($document, clone $return);
            $hydratedData['serverTime'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['car_plate']) || (! empty($this->class->fieldMappings['carPlate']['nullable']) && array_key_exists('car_plate', $data))) {
            $value = $data['car_plate'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['carPlate']->setValue($document, $return);
            $hydratedData['carPlate'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['label']) || (! empty($this->class->fieldMappings['label']['nullable']) && array_key_exists('label', $data))) {
            $value = $data['label'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['label']->setValue($document, $return);
            $hydratedData['label'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['level']) || (! empty($this->class->fieldMappings['level']['nullable']) && array_key_exists('level', $data))) {
            $value = $data['level'];
            if ($value !== null) {
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['level']->setValue($document, $return);
            $hydratedData['level'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['customer_id']) || (! empty($this->class->fieldMappings['customer']['nullable']) && array_key_exists('customer_id', $data))) {
            $value = $data['customer_id'];
            if ($value !== null) {
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['customer']->setValue($document, $return);
            $hydratedData['customer'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['trip_id']) || (! empty($this->class->fieldMappings['trip']['nullable']) && array_key_exists('trip_id', $data))) {
            $value = $data['trip_id'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['trip']->setValue($document, $return);
            $hydratedData['trip'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['txtval']) || (! empty($this->class->fieldMappings['txtval']['nullable']) && array_key_exists('txtval', $data))) {
            $value = $data['txtval'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['txtval']->setValue($document, $return);
            $hydratedData['txtval'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['intval']) || (! empty($this->class->fieldMappings['intval']['nullable']) && array_key_exists('intval', $data))) {
            $value = $data['intval'];
            if ($value !== null) {
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['intval']->setValue($document, $return);
            $hydratedData['intval'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['lon']) || (! empty($this->class->fieldMappings['lon']['nullable']) && array_key_exists('lon', $data))) {
            $value = $data['lon'];
            if ($value !== null) {
                $return = (float) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['lon']->setValue($document, $return);
            $hydratedData['lon'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['lat']) || (! empty($this->class->fieldMappings['lat']['nullable']) && array_key_exists('lat', $data))) {
            $value = $data['lat'];
            if ($value !== null) {
                $return = (float) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['lat']->setValue($document, $return);
            $hydratedData['lat'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['km']) || (! empty($this->class->fieldMappings['km']['nullable']) && array_key_exists('km', $data))) {
            $value = $data['km'];
            if ($value !== null) {
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['km']->setValue($document, $return);
            $hydratedData['km'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['battery']) || (! empty($this->class->fieldMappings['battery']['nullable']) && array_key_exists('battery', $data))) {
            $value = $data['battery'];
            if ($value !== null) {
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['battery']->setValue($document, $return);
            $hydratedData['battery'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['imei']) || (! empty($this->class->fieldMappings['imei']['nullable']) && array_key_exists('imei', $data))) {
            $value = $data['imei'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['imei']->setValue($document, $return);
            $hydratedData['imei'] = $return;
        }
        return $hydratedData;
    }
}